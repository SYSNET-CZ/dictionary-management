# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.imported_item import ImportedItem  # noqa: F401,E501
from swagger_server import util


class ReplyImported(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, count_added: int=None, count_replaced: int=None, count_rejected: int=None, added: List[ImportedItem]=None, replaced: List[ImportedItem]=None, rejected: List[ImportedItem]=None):  # noqa: E501
        """ReplyImported - a model defined in Swagger

        :param count_added: The count_added of this ReplyImported.  # noqa: E501
        :type count_added: int
        :param count_replaced: The count_replaced of this ReplyImported.  # noqa: E501
        :type count_replaced: int
        :param count_rejected: The count_rejected of this ReplyImported.  # noqa: E501
        :type count_rejected: int
        :param added: The added of this ReplyImported.  # noqa: E501
        :type added: List[ImportedItem]
        :param replaced: The replaced of this ReplyImported.  # noqa: E501
        :type replaced: List[ImportedItem]
        :param rejected: The rejected of this ReplyImported.  # noqa: E501
        :type rejected: List[ImportedItem]
        """
        self.swagger_types = {
            'count_added': int,
            'count_replaced': int,
            'count_rejected': int,
            'added': List[ImportedItem],
            'replaced': List[ImportedItem],
            'rejected': List[ImportedItem]
        }

        self.attribute_map = {
            'count_added': 'count_added',
            'count_replaced': 'count_replaced',
            'count_rejected': 'count_rejected',
            'added': 'added',
            'replaced': 'replaced',
            'rejected': 'rejected'
        }
        self._count_added = count_added
        self._count_replaced = count_replaced
        self._count_rejected = count_rejected
        self._added = added
        self._replaced = replaced
        self._rejected = rejected

    @classmethod
    def from_dict(cls, dikt) -> 'ReplyImported':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReplyImported of this ReplyImported.  # noqa: E501
        :rtype: ReplyImported
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count_added(self) -> int:
        """Gets the count_added of this ReplyImported.

        počet nově přidaných deskriptorů  # noqa: E501

        :return: The count_added of this ReplyImported.
        :rtype: int
        """
        return self._count_added

    @count_added.setter
    def count_added(self, count_added: int):
        """Sets the count_added of this ReplyImported.

        počet nově přidaných deskriptorů  # noqa: E501

        :param count_added: The count_added of this ReplyImported.
        :type count_added: int
        """

        self._count_added = count_added

    @property
    def count_replaced(self) -> int:
        """Gets the count_replaced of this ReplyImported.

        počet nahrazených deskriptorů  # noqa: E501

        :return: The count_replaced of this ReplyImported.
        :rtype: int
        """
        return self._count_replaced

    @count_replaced.setter
    def count_replaced(self, count_replaced: int):
        """Sets the count_replaced of this ReplyImported.

        počet nahrazených deskriptorů  # noqa: E501

        :param count_replaced: The count_replaced of this ReplyImported.
        :type count_replaced: int
        """

        self._count_replaced = count_replaced

    @property
    def count_rejected(self) -> int:
        """Gets the count_rejected of this ReplyImported.

        počet zamítnutých deskriptorů  # noqa: E501

        :return: The count_rejected of this ReplyImported.
        :rtype: int
        """
        return self._count_rejected

    @count_rejected.setter
    def count_rejected(self, count_rejected: int):
        """Sets the count_rejected of this ReplyImported.

        počet zamítnutých deskriptorů  # noqa: E501

        :param count_rejected: The count_rejected of this ReplyImported.
        :type count_rejected: int
        """

        self._count_rejected = count_rejected

    @property
    def added(self) -> List[ImportedItem]:
        """Gets the added of this ReplyImported.


        :return: The added of this ReplyImported.
        :rtype: List[ImportedItem]
        """
        return self._added

    @added.setter
    def added(self, added: List[ImportedItem]):
        """Sets the added of this ReplyImported.


        :param added: The added of this ReplyImported.
        :type added: List[ImportedItem]
        """

        self._added = added

    @property
    def replaced(self) -> List[ImportedItem]:
        """Gets the replaced of this ReplyImported.


        :return: The replaced of this ReplyImported.
        :rtype: List[ImportedItem]
        """
        return self._replaced

    @replaced.setter
    def replaced(self, replaced: List[ImportedItem]):
        """Sets the replaced of this ReplyImported.


        :param replaced: The replaced of this ReplyImported.
        :type replaced: List[ImportedItem]
        """

        self._replaced = replaced

    @property
    def rejected(self) -> List[ImportedItem]:
        """Gets the rejected of this ReplyImported.


        :return: The rejected of this ReplyImported.
        :rtype: List[ImportedItem]
        """
        return self._rejected

    @rejected.setter
    def rejected(self, rejected: List[ImportedItem]):
        """Sets the rejected of this ReplyImported.


        :param rejected: The rejected of this ReplyImported.
        :type rejected: List[ImportedItem]
        """

        self._rejected = rejected
